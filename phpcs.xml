<?xml version="1.0"?>
<ruleset name="WordPress Plugin Coding Standards">
	<description>A custom set of code standard rules to check for WordPress plugins.</description>

	<!-- What to scan -->
	<file>.</file>
	<exclude-pattern>*/\.github/*</exclude-pattern>
	<exclude-pattern>*/\.wordpress-org/*</exclude-pattern>
	<exclude-pattern>*/assets/*</exclude-pattern>
	<exclude-pattern>*/languages/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*\.js</exclude-pattern>
	<exclude-pattern>*\.mo</exclude-pattern>
	<exclude-pattern>*\.po</exclude-pattern>
	<exclude-pattern>*\.twig</exclude-pattern>
	<exclude-pattern>*\.css</exclude-pattern>
	<exclude-pattern>*\.scss</exclude-pattern>
    <exclude-pattern>src/WPOSA.php</exclude-pattern>

	<!-- How to scan -->
	<arg value="sp"/><!-- Show sniff and progress -->
	<arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
	<arg name="extensions" value="php"/>
	<arg name="parallel" value="12"/><!-- Enables parallel processing when available for faster results. -->
	<arg name="cache" value=".phpcs.cache"/>

	<config name="installed_paths" value="vendor/phpcompatibility/php-compatibility,vendor/phpcompatibility/phpcompatibility-paragonie,vendor/phpcompatibility/phpcompatibility-wp,vendor/wp-coding-standards/wpcs"/>
	<config name="testVersion" value="7.1-"/>

	<!-- Rules: Check PHP version compatibility -->
	<rule ref="PHPCompatibility"/>
	<rule ref="PHPCompatibilityWP"/>

	<!-- Rules: WordPress Coding Standards -->
	<config name="minimum_supported_wp_version" value="5.1"/>

    <rule ref="WordPress">
        <exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
        <exclude name="WordPress.PHP.DisallowShortTernary.Found"/>
        <exclude name="WordPress.PHP.YodaConditions" />
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
        <exclude name="PEAR.NamingConventions.ValidClassName.Invalid" />
    </rule>

    <!-- Allow symbol `/` in hook names. -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="/" />
        </properties>
    </rule>
</ruleset>
